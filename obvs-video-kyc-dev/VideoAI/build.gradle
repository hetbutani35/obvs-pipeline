buildscript {
    repositories {
        jcenter()
        flatDir {
            dirs "lib"
        }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.1.0'
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.1.RELEASE")
    }
}

configurations {
    apt
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'ai.obvs'

ext {
    apacheCommonsIoVersion = '2.5'
    log4j2version = '2.12.1'
}

bootJar {
    mainClassName = 'ai.obvs.Application'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.apache.logging.log4j:log4j-api:2.12.1"
    implementation 'org.springframework.boot:spring-boot-starter-web:2.1.3.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.3.0.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.3.1.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-mail:2.2.5.RELEASE'
    implementation 'javax.validation:validation-api:2.0.0.Final'
    runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
    compile group: 'io.openvidu', name: 'openvidu-java-client', version: '2.15.0'
    compile group: 'org.liquibase', name: 'liquibase-core', version: '3.10.1'
    implementation group: "com.twilio.sdk", name:"twilio", version: "7.20.0"
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    implementation "org.mapstruct:mapstruct:1.3.1.Final"

    annotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"
    compile 'org.apache.httpcomponents:httpcore:4.4.3'
    compile 'org.apache.httpcomponents:httpmime:4.5.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation group: "org.atmosphere", name : "atmosphere-runtime", version: "2.5.5"
    implementation group: "com.telesign", name : "telesign", version: "2.3.0"
    implementation 'me.xdrop:fuzzywuzzy:1.3.1'
    compile 'com.google.cloud:google-cloud-vision:1.97.0'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'ai.obvs.Application'
        )
    }
}

android {
    defaultConfig {
        versionCode 3
        versionName '1.0.0'
    }
}

class Version {

    private int major
    private int minor
    private int patch
    private int code

    Version(int code, String version) {
        this.code = code

        def (major, minor, patch) = version.tokenize('.')
        this.major = major.toInteger()
        this.minor = minor.toInteger()
        this.patch = patch.toInteger()
    }

    @SuppressWarnings("unused")
    void bumpMajor() {
        major += 1
        minor = 0
        patch = 0

        code += 1
    }

    @SuppressWarnings("unused")
    void bumpMinor() {
        minor += 1
        patch = 0

        code += 1
    }

    @SuppressWarnings("unused")
    void bumpPatch() {
        patch += 1
        code += 1
    }

    String getName() { "$major.$minor.$patch" }

    int getCode() { code }
}

tasks.addRule("Pattern: bump<TYPE>Version") { String taskName ->
    if (taskName.matches("bump(Major|Minor|Patch)Version")) {
        task(taskName) {
            doLast {
                String type = (taskName - 'bump' - 'Version')

                println "Bumping ${type.toLowerCase()} version…"

                int oldVersionCode = android.defaultConfig.versionCode
                String oldVersionName = android.defaultConfig.versionName

                version = new Version(oldVersionCode, oldVersionName)
                version."bump$type"()

                String newVersionName = version.getName()
                String newVersionCode = version.getCode()

                println "$oldVersionName ($oldVersionCode) → $newVersionName ($newVersionCode)"

                def updated = buildFile.getText()
                updated = updated.replaceFirst("versionName '$oldVersionName'", "versionName '$newVersionName'")
                updated = updated.replaceFirst("versionCode $oldVersionCode", "versionCode $newVersionCode")

                buildFile.setText(updated)
            }
        }
    }
}
